## All minimal values are defined in global
global:
  scheme: http
  maintenance: maintenance-conception.example.org
  pogues:
    ui: conception-questionnaire.example.org
    api: api-conception-questionnaire.example.org
  enoWS:
    enojava: api-generation-questionnaires.example.org
    enoxml: api-eno.example.org
  publicEnemy:
    ui: personnalisation-conception-questionnaires.example.org
    api: api-personnalisation-conception-questionnaires.example.org
  apiQuestionnaires: api-visualisation-questionnaires.example.org
  queen:
    ui: visualisation-questionnaires-enqueteurs.example.org
  stromaeV1:
    ui: visualisation-questionnaires-web-v1.example.org
    api: api-visualisation-questionnaires-web-v1.example.org
  stromaeV2:
    ui: visualisation-questionnaires-web-v2.example.org
  stromaeV3:
    ui: visualisation-questionnaires-web-v3.example.org
  metadata:
    ddias: ddias.example.org
    magma: magma.example.org
  auth:
    server: ""
    realm: ""
  certificat:
    manager: ""

pogues:
  ui:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
      hosts:
        - host: "{{ .Values.global.pogues.ui }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.pogues.ui }}"
    env:
      API_URL: "{{ .Values.global.scheme }}://{{ .Values.global.pogues.api }}/api"
      PUBLIC_ENEMY_URL: "{{ .Values.global.publicEnemy.ui }}"
      OIDC_AUTHORITY: "{{ .Values.global.auth.server }}/realms/{{ .Values.global.auth.realm }}"
      OIDC_CLIENT_ID: ""
  api:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
      hosts:
        - host: "{{ .Values.global.pogues.api }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.pogues.api }}"
    env:
      APPLICATION_HOST: "{{ .Values.global.pogues.api }}"
      APPLICATION_SCHEME: "{{ .Values.global.scheme }}"
      APPLICATION_STAMP_RESTRICTED: "stamp"

      APPLICATION_CORSORIGIN: "*"

      # http request directy with service (without using ingress), because two apps are in the same namespace
      APPLICATION_STROMAE_HOST: "http://admin:@{{ .Release.Name }}-orbeon-existdb-api"
      APPLICATION_STROMAE_VIS_PATH: exist/apps/orbeon/visualize
      APPLICATION_STROMAE_ORBEON_HOST: "{{ .Values.global.scheme }}://{{ .Values.global.stromaeV1.ui }}"

      APPLICATION_QUEEN_VIS_HOST: "{{ .Values.global.scheme }}://{{ .Values.global.queen.ui }}"
      APPLICATION_QUEEN_VIS_PATH: /queen/visualize
      APPLICATION_QUEEN_VIS_QUERYPARAMS_QUESTIONNAIRE: questionnaire
      APPLICATION_QUEEN_VIS_QUERYPARAMS_NOMENCLATURES: nomenclature

      APPLICATION_STROMAEV2_VIS_HOST: "{{ .Values.global.scheme }}://{{ .Values.global.stromaeV2.ui }}"
      APPLICATION_STROMAEV2_VIS_PATH: /visualize
      APPLICATION_STROMAEV2_VIS_QUERYPARAMS_QUESTIONNAIRE: questionnaire
      APPLICATION_STROMAEV2_VIS_QUERYPARAMS_NOMENCLATURES: nomenclature

      APPLICATION_STROMAEV3_VIS_HOST: "{{ .Values.global.scheme }}://{{ .Values.global.stromaeV3.ui }}"
      APPLICATION_STROMAEV3_VIS_PATH: /visualize
      APPLICATION_STROMAEV3_VIS_QUERYPARAMS_QUESTIONNAIRE: source
      APPLICATION_STROMAEV3_VIS_QUERYPARAMS_NOMENCLATURES: nomenclature

      # http request directy with service (without using ingress), because two apps are in the same namespace
      APPLICATION_ENO_HOST: "http://{{ .Release.Name }}-eno-ws-java"
      APPLICATION_API_NOMENCLATURES: "{{ .Values.global.scheme }}://{{ .Values.global.apiQuestionnaires }}"

      APPLICATION_METADATA_DDIAS: "{{ .Values.global.scheme }}://{{ .Values.global.metadata.ddias }}"
      APPLICATION_METADATA_MAGMA: "{{ .Values.global.scheme }}://{{ .Values.global.metadata.magma }}"

      FEATURE_OIDC_ENABLED: false
      FEATURE_OIDC_AUTHSERVERURL: "{{ .Values.global.auth.server }}"
      FEATURE_OIDC_REALM: "{{ .Values.global.auth.realm }}"
      FEATURE_OIDC_CLIENTID: ""
      FEATURE_OIDC_PRINCIPALATTRIBUTE: ""
      FEATURE_OIDC_ROLECLAIM: ""
      FEATURE_OIDC_STAMPCLAIM: ""
      FEATURE_OIDC_USERNAMECLAIM: ""
  postgresql:
    enabled: false

eno-ws:
  enoxml:
    enabled: false
    env:
      FR_INSEE_ENOWS_API_SCHEME: "{{ .Values.global.scheme }}"
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
      hosts:
        - host: "{{ .Values.global.enoWS.enoxml }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.enoWS.enoxml }}"

  enojava:
    enabled: false
    env:
      ENO_RELEASE_NOTE_URL: "https://github.com/InseeFr/Eno/blob/v3-main/CHANGELOG.md"
      # http request directy with service (without using ingress), because two apps are in the same namespace
      ENO_LEGACY_WS_URL: "http://{{ .Release.Name }}-eno-ws-xml"
      ENO_CORS_ORIGINS: "http://{{ .Values.global.pogues.api }}"
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
      hosts:
        - host: "{{ .Values.global.enoWS.enojava }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.enoWS.enojava }}"

public-enemy:
  ui:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
      hosts:
        - host: "{{ .Values.global.publicEnemy.ui }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.publicEnemy.ui }}"

    env:
      VITE_API_URL: "{{ .Values.global.scheme }}://{{ .Values.global.publicEnemy.api }}/api"
      VITE_ORCHESTRATOR_URL: "{{ .Values.global.scheme }}://{{ .Values.global.stromaeV3.ui }}"
      VITE_POGUES_URL: "{{ .Values.global.scheme }}://{{ .Values.global.pogues.ui }}"
      VITE_DOCUMENTATION_URL: "{{ .Values.global.scheme }}://inseefr.github.io/Bowie/public-enemy/guide/"
      VITE_LOCALE: fr
      VITE_AUTH_TYPE: none
      VITE_AUTH_URL: "{{ .Values.global.auth.server }}"
      VITE_REALM: "{{ .Values.global.auth.realm }}"
      VITE_CLIENT_ID: ""
  api:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
      hosts:
        - host: "{{ .Values.global.publicEnemy.api }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.publicEnemy.api }}"
    env:
      APPLICATION_CORSORIGINS: "{{ .Values.global.scheme }}://{{ .Values.global.publicEnemy.ui }},http://localhost*"
      # http request directy with service (without using ingress), because two apps are in the same namespace
      APPLICATION_POGUES_URL: "http://{{ .Release.Name  }}-pogues-api"
      # http request directy with service (without using ingress), because two apps are in the same namespace
      APPLICATION_ENO_URL: "http://{{ .Release.Name }}-eno-ws-java"
      # http request directy with service (without using ingress), because two apps are in the same namespace
      APPLICATION_QUEEN_URL: "http://{{ .Release.Name }}-api-questionnaires-api"

      APPLICATION_QUEEN_PUBLICURL: "{{ .Values.global.scheme }}://{{ .Values.global.apiQuestionnaires }}"

      APPLICATION_ORCHESTRATOR_CAWI_URL: "{{ .Values.global.scheme }}://{{ .Values.global.stromaeV3.ui }}"
      APPLICATION_ORCHESTRATOR_CAPICATI_URL: "{{ .Values.global.scheme }}://{{ .Values.global.queen.ui }}"

      APPLICATION_ROLES_ADMIN: "admin"
      APPLICATION_ROLES_DESIGNER: "designer"

      FEATURE_SWAGGER_ENABLED: true
      FEATURE_OIDC_ENABLED: false
      FEATURE_OIDC_AUTHSERVERHOST: "{{ .Values.global.auth.server }}"
      FEATURE_OIDC_REALM: "{{ .Values.global.auth.realm }}"
      FEATURE_OIDC_CLIENTID: ""
      FEATURE_OIDC_PRINCIPALATTRIBUTE: ""
      FEATURE_OIDC_ROLECLAIM: ""
  postgresql:
    enabled: false
queen:
  ui:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: "{{ .Values.global.queen.ui }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.queen.ui }}"

    env:
      QUEEN_URL: "{{ .Values.global.scheme }}://{{ .Values.global.queen.ui }}"
      VITE_QUEEN_API_URL: "{{ .Values.global.scheme }}://{{ .Values.global.apiQuestionnaires }}"
  api:
    enabled: false
  postgresql:
    enabled: false

orbeon-existdb:
  enabled: false
  api:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: "{{ .Values.global.stromaeV1.api }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.stromaeV1.api }}"
  ui:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: "{{ .Values.global.stromaeV1.ui }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.stromaeV1.ui }}"

    env:
      STROMAE_DB_URL: "http://admin:@{{ .Release.Name }}-orbeon-existdb-api"
      STROMAE_HOST: "{{ .Values.global.scheme }}://{{ .Values.global.stromaeV1.ui }}/rmesstromae"
      URL_LOGOUT: "{{ .Values.global.scheme }}://{{ .Values.global.pogues.ui }}"

stromae-v2:
  ui:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: "{{ .Values.global.stromaeV2.ui }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.stromaeV2.ui }}"

    env:
      REACT_APP_AUTH_TYPE: none
      REACT_APP_VIZUALIZE_ENABLED: true
      REACT_APP_SURVEY_API_BASE_URL: "{{ .Values.global.scheme }}://{{ .Values.global.apiQuestionnaires }}"
  api:
    enabled: false
  postgresql:
    enabled: false

stromae-v3:
  ui:
    enabled: false
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: "{{ .Values.global.stromaeV3.ui }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.stromaeV3.ui }}"

    env:
      VITE_OIDC_ENABLED: false
      VITE_API_URL: "{{ .Values.global.scheme }}://{{ .Values.global.apiQuestionnaires }}"
      VITE_VISUALIZE_DISABLED: false
  api:
    enabled: false
  postgresql:
    enabled: false

api-questionnaires:
  ui:
    enabled: false
  api:
    enabled: false
    ingress:
      enabled: false
      hosts:
        - host: "{{ .Values.global.apiQuestionnaires }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - hosts:
            - "{{ .Values.global.apiQuestionnaires }}"

      annotations:
        cert-manager.io/cluster-issuer: "{{ .Values.global.certificat.manager }}"
        nginx.ingress.kubernetes.io/proxy-body-size: "20m"

    env:
      SPRING_PROFILES_ACTIVE: dev
      LOGGING_FILE_NAME: /opt/app/queen.log
      SERVER_FORWARDHEADERSSTRATEGY: framework
      APPLICATION_CORSORIGINS:
        "{{ .Values.global.scheme }}://{{ .Values.global.apiQuestionnaires }},
        {{ .Values.global.scheme }}://{{ .Values.global.stromaeV2.ui }},
        {{ .Values.global.scheme }}://{{ .Values.global.stromaeV3.ui }},
        {{ .Values.global.scheme }}://{{ .Values.global.queen.ui }}"
      APPLICATION_TEMPFOLDER: /opt/app/temp-files
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      SPRING_LIQUIBASE_ENABLED: true
      FEATURE_OIDC_ENABLED: false
      FEATURE_SWAGGER_ENABLED: true
      FEATURE_PILOTAGE_ENABLE: false
      FEATURE_DATASET_LOADONSTART: true
      FEATURE_DATASET_DISPLAYENDPOINT: true
      FEATURE_INTERVIEWERMODE_ENABLED: true
  postgresql:
    enabled: false

# temp: we need recursive support for helm
# we need postgresql in deps of meta chart, but we have to disabled the lost postgresql instance
postgresql:
  enabled: false
